on:
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      DATABASE_ENGINE: ${{ secrets.DATABASE_ENGINE}}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD}}
      BASE_URL: ${{ secrets.BASE_URL}}
      DATABASE_POOL_SIZE: ${{ secrets.DATABASE_POOL_SIZE}}

    steps:
      - uses: actions/checkout@v4

      - name: Create .env from secrets
        run: |
          echo "BASE_URL=${{ secrets.BASE_URL }}" > .env
          echo "DATABASE_ENGINE=${{ secrets.DATABASE_ENGINE }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "DATABASE_POOL_SIZE=${{ secrets.DATABASE_POOL_SIZE }}" >> .env

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Cache Poetry virtualenvs
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: poetry-venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-venv-${{ runner.os }}-

      - name: Install dependencies (with Poetry)
        run: |
          poetry install --no-interaction --no-ansi

      - name: Install Allure
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.34.0/allure-2.34.0.tgz
          tar -xzf allure-2.34.0.tgz
          sudo mv allure-2.34.0/bin/allure /usr/local/bin/allure
          allure --version

      - name: Run docker-compose
        run: |
          docker compose up -d --build

      - name: Run tests and collect Allure results
        run: |
          rm -rf allure-results
          poetry run pytest --alluredir=allure-results

      - name: Generate Allure report
        run: |
          allure generate allure-results --clean -o allure-report

      - name: Docker-compose logs
        if: always()
        run: |
          docker compose logs api

      - name: Publish Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages